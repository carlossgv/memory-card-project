{"version":3,"sources":["components/Card.js","components/CardsList.js","components/Footer.js","components/Scoreboard.js","App.js","index.js"],"names":["Card","props","useState","pokemon","setPokemon","useEffect","a","axios","id","res","data","fetchInfo","className","style","backgroundImage","onClick","handleClick","src","sprites","front_default","alt","name","width","height","_","upperCase","CardsList","cardsList","setCardsList","getNewCards","e","target","parentElement","newCardsList","i","amount","push","random","uniqueId","Footer","Scoreboard","score","maxScore","App","setScore","setMaxScore","clickedCards","setClickedCards","newClickedCards","includes","alert","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kZAuCeA,EAlCF,SAACC,GAAW,IAAD,EACQC,mBAAS,MADjB,mBACfC,EADe,KACNC,EADM,KAYtB,OATAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACEC,IAAM,qCAAD,OAAsCN,EAAMO,GAA5C,MADP,OACVC,EADU,OAEhBL,EAAWK,EAAIC,MAFC,2CAAH,qDAKfC,KACC,CAACV,EAAMO,KAGR,sBACEI,UAAU,OACVC,MAAO,CAAEC,gBAAiB,wCAC1BC,QAASd,EAAMe,YACfR,GAAIP,EAAMO,GAJZ,UAME,qBACES,KACS,OAAPd,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAQC,gBAAiB,mCAEpCC,KAAY,OAAPjB,QAAO,IAAPA,OAAA,EAAAA,EAASkB,OAAQ,UACtBC,MAAM,QACNC,OAAO,UAET,8BACE,6BAAKC,IAAEC,UAAF,OAAYtB,QAAZ,IAAYA,OAAZ,EAAYA,EAASkB,OAAS,kBCK5BK,G,MAjCG,SAACzB,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACpByB,EADoB,KACTC,EADS,KA0B3B,OAvBAvB,qBAAU,YACY,SAAdwB,EAAeC,GACfA,GACF7B,EAAMe,YAAYc,EAAEC,OAAOC,cAAcxB,IAI3C,IADA,IAAIyB,EAAe,GACVC,EAAI,EAAGA,EAAIjC,EAAMkC,OAAQD,IAChCD,EAAaG,KACX,cAAC,EAAD,CACEpB,YAAaa,EAEbrB,GAAIgB,IAAEa,OAAO,EAAG,KADXb,IAAEc,SAAS,cAMtBV,EAAaK,GAGfJ,KACC,CAAC5B,IAGF,qBAAKW,UAAU,YAAYG,QAASd,EAAMe,YAA1C,SACGW,MC1BQY,G,MAJA,WACb,OAAO,mFCoBMC,G,MArBI,SAACvC,GAClB,OACE,sBAAKW,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBACEW,OAAO,OACPH,IAAI,eACJH,IAAI,iJACE,IACR,iDAEF,sDAAyBhB,EAAMwC,SAC/B,mDAAsBxC,EAAMyC,YAC5B,8BACE,kDADF,+GC0BSC,MApCf,WAAgB,IAAD,EACazC,mBAAS,GADtB,mBACNuC,EADM,KACCG,EADD,OAEmB1C,mBAAS,GAF5B,mBAENwC,EAFM,KAEIG,EAFJ,OAG2B3C,mBAAS,IAHpC,mBAGN4C,EAHM,KAGQC,EAHR,KA2Bb,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,CAAY6B,MAAOA,EAAOC,SAAUA,IACpC,cAAC,EAAD,CAAWP,OAAO,IAAInB,YAzBP,SAACR,GAClB,IAAIwC,EAAe,YAAOF,GACR,kBAAPtC,IACLwC,EAAgBC,SAASzC,IAC3BuC,EAAgB,IAChBG,MAAM,sCAAD,OACmCT,EADnC,8BAC8DC,IAEnEE,EAAS,KAETI,EAAgBZ,KAAK5B,GACrBuC,EAAgBC,GAChBJ,EAASH,EAAQ,GACjBU,QAAQC,IAAIX,GAERA,GAASC,GACXG,EAAYJ,EAAQ,QAUxB,cAAC,EAAD,QChCNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05f234cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport './Card.css';\n\nconst Card = (props) => {\n  const [pokemon, setPokemon] = useState(null);\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const res = await axios(`https://pokeapi.co/api/v2/pokemon/${props.id}/`);\n      setPokemon(res.data);\n    };\n\n    fetchInfo();\n  }, [props.id]);\n\n  return (\n    <div\n      className=\"card\"\n      style={{ backgroundImage: 'url(/static/img/card-background.jpg)' }}\n      onClick={props.handleClick}\n      id={props.id}\n    >\n      <img\n        src={\n          pokemon?.sprites.front_default || './static/img/card-background.jpg'\n        }\n        alt={pokemon?.name || 'Loading'}\n        width=\"300px\"\n        height=\"300px\"\n      ></img>\n      <div>\n        <h3>{_.upperCase(pokemon?.name) || 'Loading'}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport Card from './Card';\nimport './CardsList.css'\n\nconst CardsList = (props) => {\n  const [cardsList, setCardsList] = useState([]);\n\n  useEffect(() => {\n    const getNewCards = (e) => {\n      if (e) {\n        props.handleClick(e.target.parentElement.id);\n      }\n\n      let newCardsList = [];\n      for (let i = 0; i < props.amount; i++) {\n        newCardsList.push(\n          <Card\n            handleClick={getNewCards}\n            key={_.uniqueId('pokemon_')}\n            id={_.random(1, 25)}\n          />\n        );\n      }\n\n      setCardsList(newCardsList);\n    };\n\n    getNewCards();\n  }, [props]);\n\n  return (\n    <div className=\"cardsList\" onClick={props.handleClick}>\n      {cardsList}\n    </div>\n  );\n};\n\nexport default CardsList;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  return <footer>Made by Carlos Gonzalez carlossgv@gmail.com</footer>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport './Scoreboard.css';\n\nconst Scoreboard = (props) => {\n  return (\n    <div className=\"scoreBoard\">\n      <div className=\"title\">\n        <img\n          height=\"80px\"\n          alt=\"Pokemon Logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1024px-International_Pok%C3%A9mon_logo.svg.png\"\n        ></img>{' '}\n        <h1>Memory Game!</h1>\n      </div>\n      <h3>Points in this run: {props.score}</h3>\n      <h3>Personal record: {props.maxScore}</h3>\n      <p>\n        <strong>How to play:</strong> Select a card a remember it! As long as\n        you keep selecting non-repeating cards you'll score points.\n      </p>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import { useState } from 'react';\nimport './App.css';\nimport CardsList from './components/CardsList';\nimport Footer from './components/Footer';\nimport Scoreboard from './components/Scoreboard';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  const handleGame = (id) => {\n    let newClickedCards = [...clickedCards];\n    if (typeof id === 'string') {\n      if (newClickedCards.includes(id)) {\n        setClickedCards([]);\n        alert(\n          `Game Finished! Points in this run: ${score}. Personal record: ${maxScore}`\n        );\n        setScore(0);\n      } else {\n        newClickedCards.push(id);\n        setClickedCards(newClickedCards);\n        setScore(score + 1);\n        console.log(score);\n\n        if (score >= maxScore) {\n          setMaxScore(score + 1);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Scoreboard score={score} maxScore={maxScore} />\n      <CardsList amount=\"6\" handleClick={handleGame} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}